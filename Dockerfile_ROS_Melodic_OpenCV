FROM nvidia/cuda:9.2-cudnn7-devel-ubuntu18.04

# Download necessary packages
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y libgstreamer1.0-0 gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools wget autoconf \
    automake libtool git libglib2.0-dev \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev  autopoint \
    autotools-dev gtk-doc-tools libegl1-mesa-dev libgles2-mesa-dev \
    libgtk2.0-dev libtool libx11-dev libxext-dev \
    pkg-config build-essential gstreamer1.0-tools gstreamer1.0-alsa \
    libgstreamer-plugins-bad1.0-dev autotools-dev libtool  \
    gstreamer1.0-tools gstreamer-1.0  libjpeg-dev sudo  emacs v4l-utils  \
    make cmake cmake-curses-gui  g++ libavformat-dev libavutil-dev

RUN apt-get update && apt-get install -y \
    libswscale-dev libv4l-dev libeigen3-dev  libglew-dev libgtk2.0-dev \
    libdc1394-22-dev libxine2-dev  libjpeg8-dev libjpeg-turbo8-dev libtiff5-dev \
    libpng-dev libavcodec-dev \
    libxvidcore-dev libx264-dev libgtk-3-dev  libatlas-base-dev gfortran \
    libopenblas-dev liblapack-dev liblapacke-dev qt5-default \
    python3-dev python3-pip python3-tk python-dev python-pip python-tk \
    libboost-all-dev unzip ipython protobuf-compiler \
    python-rosinstall python-rosinstall-generator python-wstool \
    python-geographiclib python3-geographiclib

RUN echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list
RUN wget http://packages.ros.org/ros.key -O - | sudo apt-key add -

# Install pip packages
RUN rm -rf .local
RUN python -m pip install --upgrade pip
RUN python -m pip install numpy matplotlib

# Build OpenCV from source (so gstreamer can be included)
RUN mkdir -p /home/src
WORKDIR /home/src
# RUN wget https://github.com/opencv/opencv/archive/3.4.4.zip  -O opencv-3.4.4.zip
# RUN unzip opencv-3.4.4.zip
# WORKDIR /home/src/opencv-3.4.4
# RUN mkdir /home/src/opencv-3.4.4/build
# WORKDIR  /home/src/opencv-3.4.4/build
RUN wget https://github.com/opencv/opencv/archive/3.4.0.zip  -O opencv-3.4.0.zip
RUN unzip opencv-3.4.0.zip
WORKDIR /home/src/opencv-3.4.0
RUN mkdir /home/src/opencv-3.4.0/build
WORKDIR  /home/src/opencv-3.4.0/build
RUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D WITH_CUDA=ON -D CUDA_ARCH_BIN="6.1" -D CUDA_ARCH_PTX="" \
        -D WITH_CUBLAS=ON -D ENABLE_FAST_MATH=ON -D CUDA_FAST_MATH=ON \
        -D WITH_LIBV4L=ON -D BUILD_TESTS=OFF \
        -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF \
        -D WITH_QT=ON -D WITH_OPENGL=ON ..
RUN make -j4
RUN make install

RUN echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# RUN apt-get update && apt-get install --no-install-recommends -y --allow-unauthenticated \
#     python-rosdep \
#     python-rosinstall \
#     python-vcstools \
#     && rm -rf /var/lib/apt/lists/*
# ENV LANG C.UTF-8
# ENV LC_ALL C.UTF-8
# RUN rosdep init \
#     && rosdep update
# ENV ROS_DISTRO melodic
# RUN apt-get update && apt-get install -y --allow-unauthenticated \
#     ros-melodic-ros-core \
#     && rm -rf /var/lib/apt/lists/*

# # ROS base
# RUN apt-get update && apt-get install -y --allow-unauthenticated \
#     ros-melodic-ros-base \
#     && rm -rf /var/lib/apt/lists/*

# # ROS robot
# RUN apt-get update && apt-get install -y --allow-unauthenticated \
#     ros-melodic-robot \
#     && rm -rf /var/lib/apt/lists/*

# # ROS desktop
# RUN apt-get update && apt-get install -y --allow-unauthenticated \
#     ros-melodic-desktop \
#     && rm -rf /var/lib/apt/lists/*

# # ROS desktop full
# RUN apt-get update && apt-get install -y --allow-unauthenticated \
#     ros-melodic-desktop-full \
#     && rm -rf /var/lib/apt/lists/*



RUN apt-get update && apt install ros-melodic-desktop-full -y  #this errors out from Dockerfile but works in container
RUN rosdep init
RUN rosdep update

#Move opencv shared object file
RUN cp /usr/local/lib/python2.7/dist-packages/cv2.so /opt/ros/melodic/lib/python2.7/dist-packages

## Setup environment variables
RUN rossource="source /opt/ros/melodic/setup.bash"
RUN echo "$rossource" >> ~/.bashrc
RUN eval $rossource







